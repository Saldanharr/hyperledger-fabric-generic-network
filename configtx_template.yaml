
Organizations:

    - &organization_nameOrdererMSP
        Name: organization_nameOrdererMSP
        ID: organization_nameOrdererMSP
        MSPDir: crypto-config/ordererOrganizations/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('organization_nameOrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('organization_nameOrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('organization_nameOrdererMSP.admin')"

    - &organization_nameMSP
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: organization_nameMSP

        # ID to load the MSP definition as
        ID: organization_nameMSP

        MSPDir: crypto-config/peerOrganizations/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('organization_nameMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('organization_nameMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('organization_nameMSP.admin')"

        # leave this flag set to true.
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: ip_address
              Port: 7051

Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.4.2 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.4.2
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.4.2 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.4.2 or later.
        V1_4_3: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.4.2 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.4.2
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.4.2 orderer capabilities, ensure that all
        # orderers on a channel are at v1.4.2 or later.
        V1_4_2: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.4.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.4.2.
        V1_4_2: true
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: false
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults
  OrdererType: etcdraft
  Addresses:
    - ip_address:7050
    - ip_address:8050
    - ip_address:9050
  BatchTimeout: 2s
  BatchSize:
    MaxMessageCount: 50
    AbsoluteMaxBytes: 30 MB
    PreferredMaxBytes: 512 KB
  EtcdRaft:
    Consenters:
    - Host: ip_address
      Port: 7050
      ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer1.organization_domain/tls/server.crt
      ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer1.organization_domain/tls/server.crt
    - Host: ip_address
      Port: 8050
      ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer2.organization_domain/tls/server.crt
      ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer2.organization_domain/tls/server.crt
    - Host: ip_address
      Port: 9050
      ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer3.organization_domain/tls/server.crt
      ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer3.organization_domain/tls/server.crt      
    
    # Options to be specified for all the etcd/raft nodes. The values here
    # are the defaults for all new channels and can be modified on a
    # per-channel basis via configuration updates.
    Options:
        # TickInterval is the time interval between two Node.Tick invocations.
        TickInterval: 500ms

        # ElectionTick is the number of Node.Tick invocations that must pass
        # between elections. That is, if a follower does not receive any
        # message from the leader of current term before ElectionTick has
        # elapsed, it will become candidate and start an election.
        # ElectionTick must be greater than HeartbeatTick.
        ElectionTick: 10

        # HeartbeatTick is the number of Node.Tick invocations that must
        # pass between heartbeats. That is, a leader sends heartbeat
        # messages to maintain its leadership every HeartbeatTick ticks.
        HeartbeatTick: 1

        # MaxInflightBlocks limits the max number of in-flight append messages
        # during optimistic replication phase.
        MaxInflightBlocks: 5

        # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
        SnapshotIntervalSize: 20 MB  
  Organizations:
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        Rule: "ANY Admins"
    BlockValidation:
        Type: ImplicitMeta
        Rule: "ANY Writers"
  Capabilities:
      <<: *OrdererCapabilities
################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

    Capabilities:
        <<: *ChannelCapabilities

Profiles:
    OrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *organization_nameOrdererMSP
        Consortiums:
            organization_nameConsortium:
                Organizations:
                    - *organization_nameMSP
            
    Channel:
        Consortium: organization_nameConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *organization_nameMSP
            Capabilities:
                <<: *ApplicationCapabilities